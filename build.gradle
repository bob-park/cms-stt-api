plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.malgn'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

ext {
    malgnStarterVersion = "1.1.3-RC1-2025.05.27"

    springCloudVersion = '2024.0.0'
    springCloudNetflixVersion = '4.2.0'

    queryDslVersion = "5.0.0"
    lombokVersion = "1.18.36"

    springAiVersion = "1.0.0-M6"
}

repositories {
    mavenCentral()

    // malgn spring boot starter
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/malgn/dependency-repository")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_GRADLE_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_GRADLE_ACCESS_TOKEN")
        }
    }
}

dependencies {

    // malgn spring boot starter
    implementation "com.malgn:malgn-spring-boot-starter:${malgnStarterVersion}"

    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // spring cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${springCloudNetflixVersion}"
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    // spring ai openai
    implementation "org.springframework.ai:spring-ai-openai-spring-boot-starter"

    // jdbc
    implementation 'org.postgresql:postgresql:42.7.3'

    // p6spy
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.2'

    // lombok
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // querydsl
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta")
    annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")
    testAnnotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")

    // ffmpeg
    implementation 'net.bramp.ffmpeg:ffmpeg:0.8.0'
    implementation 'org.zeroturnaround:zt-exec:1.12'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
